#!/usr/bin/env python3
"""
LIKE ANNIHILATOR v4.0 - Advanced Account Management Tool
–ê–≤—Ç–æ—Ä: –ë—É–Ω—Ç–∞—Ä—Å–∫–∏–π –ì–µ–Ω–∏–π
–§–∏–ª–æ—Å–æ—Ñ–∏—è: –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞–Ω–æ–≤–æ.
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –õ–µ–≥–∏—Ç–∏–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Likee –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
"""

import json
import requests
import random
import time
import hashlib
import hmac
import base64
import string
import os
import sys
from datetime import datetime
from typing import Dict, List, Optional
import urllib.parse

class LikeeAnnihilator:
    def __init__(self):
        self.session = requests.Session()
        self.target_accounts = []
        self.attack_progress = {}
        self.compromised_data = {}
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API Likee (—á–µ—Ä–µ–∑ —Ä–µ–≤–µ—Ä—Å-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥)
        self.api_base = "https://api.likee.com/"
        self.endpoints = {
            'login': 'user/login',
            'logout': 'user/logout', 
            'delete': 'user/delete',
            'profile': 'user/profile',
            'change_password': 'user/changePassword',
            'report': 'report/user',
            'block': 'user/block',
            'follow': 'social/follow',
            'unfollow': 'social/unfollow',
            'upload': 'video/upload'
        }
        
        self.headers = {
            'User-Agent': 'Likee/5.20.1 (iPhone; iOS 14.6; Scale/3.00)',
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-APP-VERSION': '5.20.1',
            'X-DEVICE-ID': self.generate_device_id(),
            'X-OS-TYPE': 'iOS',
            'X-OS-VERSION': '14.6',
            'X-REQUEST-ID': self.generate_request_id()
        }

    def print_banner(self):
        banner = """
‚ï¶  ‚îå‚îÄ‚îê‚î¨‚îå‚îÄ‚îå‚îÄ‚îê‚î¨‚îå‚îÄ‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚î¨‚îå‚î¨‚îê‚îå‚îÄ‚îê‚î¨ ‚î¨
‚ïë  ‚îú‚îÄ‚î§‚îú‚î¥‚îê‚îÇ ‚îÇ‚îú‚î¥‚îê‚îú‚î§  ‚îÇ ‚îú‚î¨‚îò‚îú‚îÄ‚î§‚îÇ  ‚îÇ ‚îÇ‚îÇ‚îú‚îÄ‚î§‚îÇ‚îÇ‚îÇ
‚ï©‚ïê‚ïù‚î¥ ‚î¥‚î¥ ‚î¥‚îî‚îÄ‚îò‚î¥ ‚î¥‚îî‚îÄ‚îò ‚î¥ ‚î¥‚îî‚îÄ‚î¥ ‚î¥‚îî‚îÄ‚îò‚î¥‚îÄ‚î¥‚îò‚î¥ ‚î¥‚îî‚î¥‚îò
            ACCOUNT MANAGEMENT SUITE v4.0
            
 –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–ª—å–∫–æ –¥–ª—è –ª–µ–≥–∏—Ç–∏–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!
–ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è: —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –¥–ª—è: –∞—Ç–∞–∫ –Ω–∞ —á—É–∂–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
        """
        print(banner)

    def generate_device_id(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ device_id"""
        import uuid
        return str(uuid.uuid4()).upper()

    def generate_request_id(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∑–∞–ø—Ä–æ—Å–∞"""
        timestamp = int(time.time() * 1000)
        random_str = ''.join(random.choices(string.ascii_letters + string.digits, k=8))
        return f"{timestamp}_{random_str}"

    def hash_password(self, password):
        """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è (—Å–∏–º—É–ª—è—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ Likee)"""
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ —Ä–µ–≤–µ—Ä—Å-–∏–Ω–∂–∏–Ω–∏—Ä–∏—Ç—å —Ç–æ—á–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º
        salt = "likee_salt_2024"
        return hashlib.md5(f"{password}{salt}".encode()).hexdigest()

    def likee_encrypt(self, data):
        """–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Likee API"""
        # –°–∏–º—É–ª—è—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω —Ä–µ–≤–µ—Ä—Å-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥
        if isinstance(data, dict):
            data = json.dumps(data)
        return base64.b64encode(data.encode()).decode()

    def likee_decrypt(self, encrypted_data):
        """–î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Likee"""
        try:
            return base64.b64decode(encrypted_data).decode()
        except:
            return encrypted_data

    def test_connection(self):
        """–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API Likee"""
        print("[+] –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Likee API...  Untitled1:101 - LikeeAnnihilator.py:101")
        try:
            test_url = self.api_base + "ping"
            response = self.session.get(test_url, timeout=10)
            if response.status_code == 200:
                print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Likee API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ  Untitled1:106 - LikeeAnnihilator.py:106")
                return True
            else:
                print("Likee API –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç  Untitled1:109 - LikeeAnnihilator.py:109")
                return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}  Untitled1:112 - LikeeAnnihilator.py:112")
            return False

    def login_attempt(self, username, password, method="bruteforce"):
        """–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç"""
        print(f"[+] –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç: {username}  Untitled1:117 - LikeeAnnihilator.py:117")
        
        login_data = {
            'username': username,
            'password': self.hash_password(password),
            'device_id': self.headers['X-DEVICE-ID'],
            'timestamp': int(time.time())
        }
        
        try:
            # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤—Ö–æ–¥–∞
            encrypted_data = self.likee_encrypt(login_data)
            
            response = {
                'status': 'success' if random.random() > 0.7 else 'failed',
                'user_id': random.randint(1000000, 9999999) if random.random() > 0.7 else None,
                'session_token': ''.join(random.choices(string.hexdigits, k=32)) if random.random() > 0.7 else None,
                'message': 'Login successful' if random.random() > 0.7 else 'Invalid credentials'
            }
            
            if response['status'] == 'success':
                print(f"–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! User ID: {response['user_id']}  Untitled1:138 - LikeeAnnihilator.py:138")
                self.compromised_data[username] = {
                    'user_id': response['user_id'],
                    'session_token': response['session_token'],
                    'password': password,
                    'login_time': datetime.now().isoformat()
                }
                return True
            else:
                print(f"–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response['message']}  Untitled1:147 - LikeeAnnihilator.py:147")
                return False
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {e}  Untitled1:151 - LikeeAnnihilator.py:151")
            return False

    def bruteforce_attack(self, username, wordlist=None):
        """–ê—Ç–∞–∫–∞ bruteforce –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç"""
        print(f"[+] –ó–∞–ø—É—Å–∫ bruteforce –∞—Ç–∞–∫–∏ –Ω–∞: {username}  Untitled1:156 - LikeeAnnihilator.py:156")
        
        if wordlist is None:
            wordlist = [
                "123456", "password", "12345678", "qwerty", "123456789",
                "12345", "1234", "111111", "1234567", "dragon",
                username, f"{username}123", f"{username}2024"
            ]
        
        attempts = 0
        max_attempts = len(wordlist)
        
        for password in wordlist:
            attempts += 1
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempts}/{max_attempts}: {password}  Untitled1:170 - LikeeAnnihilator.py:170", end='\r')
            
            if self.login_attempt(username, password):
                print(f"\n –ù–∞–π–¥–µ–Ω –ø–∞—Ä–æ–ª—å: {password}  Untitled1:173 - LikeeAnnihilator.py:173")
                return True
                
            time.sleep(0.5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
            
        print(f"\n –ü–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ {attempts} –ø–æ–ø—ã—Ç–æ–∫  Untitled1:178 - LikeeAnnihilator.py:178")
        return False

    def social_engineering_attack(self, username):
        """–ê—Ç–∞–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏"""
        print(f"[+] –ó–∞–ø—É—Å–∫ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –¥–ª—è: {username}  Untitled1:183 - LikeeAnnihilator.py:183")
        
        techniques = [
            "Phishing Email Simulation",
            "Fake Password Reset",
            "Security Question Guessing", 
            "Profile Information Analysis",
            "Contact Spoofing"
        ]
        
        for technique in techniques:
            print(f"üé≠ –í—ã–ø–æ–ª–Ω—è–µ–º: {technique}  Untitled1:194 - LikeeAnnihilator.py:194")
            time.sleep(1)
            
            # –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—Ö–∞
            if random.random() > 0.8:
                generated_password = self.generate_common_password(username)
                print(f"–ü–æ–ª—É—á–µ–Ω –ø–∞—Ä–æ–ª—å: {generated_password}  Untitled1:200 - LikeeAnnihilator.py:200")
                return self.login_attempt(username, generated_password)
                
        return False

    def generate_common_password(self, username):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ username"""
        base = username.lower()
        variations = [
            base,
            base + "123",
            base + "123456", 
            base + "2024",
            base + "!",
            base.title() + "1",
            base + "000",
            "123" + base
        ]
        return random.choice(variations)

    def account_reconnaissance(self, username):
        """–†–∞–∑–≤–µ–¥–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"[+] –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ: {username}  Untitled1:222 - LikeeAnnihilator.py:222")
        
        info = {
            'username': username,
            'possible_emails': [
                f"{username}@gmail.com",
                f"{username}@yahoo.com", 
                f"{username}@hotmail.com"
            ],
            'registration_date': "2023-" + str(random.randint(1,12)) + "-" + str(random.randint(1,28)),
            'last_login': "2024-" + str(random.randint(1,3)) + "-" + str(random.randint(1,28)),
            'follower_count': random.randint(0, 10000),
            'video_count': random.randint(0, 500),
            'account_status': random.choice(['active', 'inactive', 'suspended'])
        }
        
        print("–°–æ–±—Ä–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:  Untitled1:238 - LikeeAnnihilator.py:238")
        for key, value in info.items():
            print(f"{key}: {value}  Untitled1:240 - LikeeAnnihilator.py:240")
            
        return info

    def delete_account(self, username, user_id, session_token):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"[+] –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞: {username}  Untitled1:246 - LikeeAnnihilator.py:246")
        
        delete_data = {
            'user_id': user_id,
            'session_token': session_token,
            'reason': 'user_request',
            'timestamp': int(time.time())
        }
        
        try:
            # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è
            print("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ...  Untitled1:257 - LikeeAnnihilator.py:257")
            time.sleep(2)
            
            # –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ email/SMS
            print("–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...  Untitled1:261 - LikeeAnnihilator.py:261")
            time.sleep(1)
            
            # –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            if random.random() > 0.3:
                print(f"–ê–∫–∫–∞—É–Ω—Ç {username} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!  Untitled1:266 - LikeeAnnihilator.py:266")
                return True
            else:
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞  Untitled1:269 - LikeeAnnihilator.py:269")
                return False
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}  Untitled1:273 - LikeeAnnihilator.py:273")
            return False

    def mass_report_attack(self, username, user_id):
        """–ú–∞—Å—Å–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"[+] –ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–≥–æ —Ä–µ–ø–æ—Ä—Ç–∞: {username}  Untitled1:278 - LikeeAnnihilator.py:278")
        
        report_reasons = [
            "spam", "harassment", "fake_account", "impersonation",
            "inappropriate_content", "underage_user", "copyright"
        ]
        
        reports_sent = 0
        for i in range(10):  # 10 —Ä–µ–ø–æ—Ä—Ç–æ–≤
            reason = random.choice(report_reasons)
            print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞ {i+1}/10: {reason}  Untitled1:288 - LikeeAnnihilator.py:288")
            
            if random.random() > 0.2:  # 80% —É—Å–ø–µ—Ö–∞
                reports_sent += 1
                
            time.sleep(0.5)
            
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {reports_sent} —Ä–µ–ø–æ—Ä—Ç–æ–≤  Untitled1:295 - LikeeAnnihilator.py:295")
        return reports_sent > 5  # –°—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º –µ—Å–ª–∏ –±–æ–ª—å—à–µ 5 —Ä–µ–ø–æ—Ä—Ç–æ–≤

    def data_destruction(self, username):
        """–£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"[+] –ó–∞–ø—É—Å–∫ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {username}  Untitled1:300 - LikeeAnnihilator.py:300")
        
        destruction_methods = [
            "Clear Profile Information",
            "Delete All Videos", 
            "Remove Followers/Following",
            "Wipe Chat History",
            "Delete Uploaded Content",
            "Remove Linked Accounts"
        ]
        
        for method in destruction_methods:
            print(f"–í—ã–ø–æ–ª–Ω—è–µ–º: {method}  Untitled1:312 - LikeeAnnihilator.py:312")
            time.sleep(1)
            
            # –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—Ö–∞
            success_rate = random.random()
            if success_rate > 0.2:
                print(f"{method}  –£—Å–ø–µ—à–Ω–æ  Untitled1:318 - LikeeAnnihilator.py:318")
            else:
                print(f"{method}  –û—à–∏–±–∫–∞  Untitled1:320 - LikeeAnnihilator.py:320")
                
        print("–ü—Ä–æ—Ü–µ—Å—Å —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω  Untitled1:322 - LikeeAnnihilator.py:322")

    def generate_attack_report(self, username, success):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ–± –∞—Ç–∞–∫–µ"""
        print("\n  Untitled1:326 - LikeeAnnihilator.py:326" + "="*60)
        print("LIKE ANNIHILATOR  –û–¢–ß–ï–¢ –û–ü–ï–†–ê–¶–ò–ò  Untitled1:327 - LikeeAnnihilator.py:327")
        print("=  Untitled1:328 - LikeeAnnihilator.py:328"*60)
        
        print(f"–¶–µ–ª—å: {username}  Untitled1:330 - LikeeAnnihilator.py:330")
        print(f"–°—Ç–∞—Ç—É—Å: {'–£–°–ü–ï–•' if success else '–ù–ï–£–î–ê–ß–ê'}  Untitled1:331 - LikeeAnnihilator.py:331")
        print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y%m%d %H:%M:%S')}  Untitled1:332 - LikeeAnnihilator.py:332")
        
        if username in self.compromised_data:
            data = self.compromised_data[username]
            print(f"User ID: {data['user_id']}  Untitled1:336 - LikeeAnnihilator.py:336")
            print(f"Session Token: {data['session_token'][:8]}...  Untitled1:337 - LikeeAnnihilator.py:337")
            print(f"–ü–∞—Ä–æ–ª—å: {data['password']}  Untitled1:338 - LikeeAnnihilator.py:338")
            
        print("\n–í–´–ü–û–õ–ù–ï–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:  Untitled1:340 - LikeeAnnihilator.py:340")
        actions = [
            "–†–∞–∑–≤–µ–¥–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞",
            "–ü–æ–¥–±–æ—Ä —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", 
            "–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞",
            "–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º"
        ]
        
        for action in actions:
            status = " –í—ã–ø–æ–ª–Ω–µ–Ω–æ" if random.random() > 0.3 else "‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
            print(f"{action}: {status}  Untitled1:351 - LikeeAnnihilator.py:351")
            
        print("=  Untitled1:353 - LikeeAnnihilator.py:353"*60)

    def safety_checks(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        print("[+] –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...  Untitled1:357 - LikeeAnnihilator.py:357")
        
        checks = [
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–µ–≥–∏—Ç–∏–º–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–π",
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞", 
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
            "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π"
        ]
        
        for check in checks:
            print(f"{check}...  Untitled1:367 - LikeeAnnihilator.py:367")
            time.sleep(0.5)
            
        response = input("\n  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–∏–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ (y/n): ")
        return response.lower() == 'y'

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    annihilator = LikeeAnnihilator()
    annihilator.print_banner()
    
    if not annihilator.safety_checks():
        print("–ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.  Untitled1:379 - LikeeAnnihilator.py:379")
        return
        
    while True:
        print("\n  Untitled1:383 - LikeeAnnihilator.py:383" + "="*50)
        print("LIKE ANNIHILATOR  –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ  Untitled1:384 - LikeeAnnihilator.py:384")
        print("=  Untitled1:385 - LikeeAnnihilator.py:385"*50)
        print("1. –†–∞–∑–≤–µ–¥–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞  Untitled1:386 - LikeeAnnihilator.py:386")
        print("2.  Bruteforce –∞—Ç–∞–∫–∞  Untitled1:387 - LikeeAnnihilator.py:387") 
        print("3.  –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è  Untitled1:388 - LikeeAnnihilator.py:388")
        print("4.   –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞  Untitled1:389 - LikeeAnnihilator.py:389")
        print("5.  –ú–∞—Å—Å–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç  Untitled1:390 - LikeeAnnihilator.py:390")
        print("6.  –ü–æ–ª–Ω–æ–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ  Untitled1:391 - LikeeAnnihilator.py:391")
        print("7.  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞  Untitled1:392 - LikeeAnnihilator.py:392")
        print("8.  –í—ã—Ö–æ–¥  Untitled1:393 - LikeeAnnihilator.py:393")
        print("=  Untitled1:394 - LikeeAnnihilator.py:394"*50)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-8): ").strip()
        
        try:
            if choice == "1":
                username = input("Username –¥–ª—è —Ä–∞–∑–≤–µ–¥–∫–∏: ").strip()
                if username:
                    annihilator.account_reconnaissance(username)
                    
            elif choice == "2":
                username = input("Username –¥–ª—è bruteforce: ").strip()
                if username:
                    wordlist = input("Wordlist —Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip()
                    wordlist = None if not wordlist else wordlist
                    annihilator.bruteforce_attack(username, wordlist)
                    
            elif choice == "3":
                username = input("Username –¥–ª—è —Å–æ—Ü. –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏: ").strip()
                if username:
                    annihilator.social_engineering_attack(username)
                    
            elif choice == "4":
                username = input("Username –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
                if username and username in annihilator.compromised_data:
                    data = annihilator.compromised_data[username]
                    annihilator.delete_account(username, data['user_id'], data['session_token'])
                else:
                    print("–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É  Untitled1:422 - LikeeAnnihilator.py:422")
                    
            elif choice == "5":
                username = input("Username –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–∞: ").strip()
                if username and username in annihilator.compromised_data:
                    data = annihilator.compromised_data[username]
                    annihilator.mass_report_attack(username, data['user_id'])
                else:
                    print("–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É  Untitled1:430 - LikeeAnnihilator.py:430")
                    
            elif choice == "6":
                username = input("Username –¥–ª—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è: ").strip()
                if username:
                    if username in annihilator.compromised_data:
                        annihilator.data_destruction(username)
                        annihilator.delete_account(username, 
                            annihilator.compromised_data[username]['user_id'],
                            annihilator.compromised_data[username]['session_token'])
                    else:
                        print("–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É  Untitled1:441 - LikeeAnnihilator.py:441")
                        
            elif choice == "7":
                username = input("Username –¥–ª—è –æ—Ç—á–µ—Ç–∞: ").strip()
                if username:
                    success = username in annihilator.compromised_data
                    annihilator.generate_attack_report(username, success)
                    
            elif choice == "8":
                print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...  Untitled1:450 - LikeeAnnihilator.py:450")
                break
                
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä  Untitled1:454 - LikeeAnnihilator.py:454")
                
        except KeyboardInterrupt:
            print("\n –í—ã—Ö–æ–¥...  Untitled1:457 - LikeeAnnihilator.py:457")
            break
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}  Untitled1:460 - LikeeAnnihilator.py:460")

if __name__ == "__main__":
    # –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    try:
        import requests
    except ImportError:
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ requests: pip install requests  Untitled1:467 - LikeeAnnihilator.py:467")
        sys.exit(1)
        
    import random  # –î–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏
        
    main()
